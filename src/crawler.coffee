'use strict'
request = require('request')
config = require('./config')
select = require('soupselect').select
htmlparser = require('htmlparser')

debug = (cause) ->
  console.log cause
  return

if config.MOCK

  module.exports = (r, cb) ->
    cb [
      {
        mac_address: '78:31:c1:ba:99:82'
        isLogged: true
      }
      {
        mac_address: '88:1f:a1:1e:b3:52'
        isLogged: true
      }
      {
        mac_address: '4c:7c:5f:86:c4:f0'
        isLogged: true
      }
      {
        mac_address: '00:1c:f0:ed:7f:0e'
        isLogged: true
      }
      {
        mac_address: '30:b5:c2:11:95:31'
        isLogged: true
      }
      {
        mac_address: '34:a3:95:ce:51:69'
        isLogged: false
      }
      {
        mac_address: '48:d7:05:4c:af:07'
        isLogged: true
      }
      {
        mac_address: 'e0:b5:2d:dd:58:b9'
        isLogged: false
      }
      {
        mac_address: '5c:51:4f:bd:6f:14'
        isLogged: true
      }
      {
        mac_address: '28:5a:eb:c5:16:b2'
        isLogged: true
      }
    ]
    return

else

  module.exports = (router_ip, cb) ->
    request 'http://' + router_ip + '/padrao?page=page_view_map', (err, response, body) ->
      if err
        debug 'Something wrong while crawling'
      handler = new htmlparser.DefaultHandler((err, dom) ->
        if err
          debug 'something went wrong while parsing'
        else
          pageBody = select(dom, '#page_body')
          trs = pageBody[0].children[0].children[0].children[0].children[0].children[0].children[0].children[0].children
          result = []
          i = 0
          while i < trs.length
            if i % 2 is 0
              isLogged = true
              mac_address = trs[i].children[trs[i].children.length - 1].children[0].children[0].children[0].children[0].attribs.href
              if trs[i].children[trs[i].children.length - 2].children[0].attribs.src is '/images/disconn_wireless.png'
                isLogged = false
              mac = mac_address.match(/(..%3A)+../g)[0].replace(/%3A/g, ':')
              result.push
                mac_address: mac
                isLogged: isLogged
            i++
          cb result
        return
)
      parser = new (htmlparser.Parser)(handler)
      parser.parseComplete body
      return
    return

# ---
# generated by js2coffee 2.1.0
